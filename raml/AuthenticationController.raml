#%RAML 0.8
title: Two Legged OAUTH2 Authentication Controller
baseUri: http://dc11dev01.dc11.digitalriver.com:9201
protocols: [ HTTP ]
/oauth2/status: 
        get: 
          description: Status API for load balancer.
          responses: 
            200: 
              body: 
                application/xml: 
                  example: |
                    <Status>UP</Status>        
      
/oauth2/tokens: 
      post:
        description: Create a bearer token given an encoded JWT
        body: 
            application/x-www-form-urlencoded: 
              formParameters: 
                jwt:
                  description: base 64 encoded JWT
                  type: string
                  required: true
                  example: eyJhbGciOiJSUzI1NiIsICJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiZWRyaW4iLCAiYXVkIjogImRyd3AiLCAiaWF0IjogIjE0MDY4MTQyMDQiLCAiZXhwIjogIjE0MDY4MTQ1MDQiLCAiZGV2aWQiOiAidGVzdERldmljZSIsICJzY29wZSI6ICIvc3RvcmVUb2tlbiJ9.YRutuJpAugVxmsNW1Equmh4aj_h6GjE7LdSo9CgBst4NbTU7WtKy4nX0JYw0i5sdK9rWy4HzaDQvG8RoWiT3yg
        responses: 
              201: 
                 description: The response of the API is an object that contains the following fields.
                 body:  
                  application/json: 
                    example: | 
                      {
                      "access_token": "b6afc7894e30fa3d58b319c4aca4f58dd3173bbf",
                      "token_type": "Bearer",
                      "expires_in": 10000,
                      "number_of_retries": 10
                      "secret_key": "mo_Kab-u6mMtBYmgQjnh8w",
                      "initialization_vector": "inxc42CYDS6OckBfHNxzxQ"
                      }
              400:
                  description: Note, Pattern will be same however error codes may differ depending on the error. 
                  body:
                    application/json:
                      example: |
                        {
                          "error":"invalid_request",
                          "error_description":"refreshToken must not be empty"
                        }

/v2/oauth2/tokens: 
      post:
        description: Create a bearer token given an encoded JWT. V2 api will allow the scope fields of JWT to contain also the operation
        body: 
            application/x-www-form-urlencoded: 
              formParameters: 
                jwt:
                  description: base 64 encoded JWT
                  type: string
                  required: true
                  example: eyJhbGciOiJSUzI1NiIsICJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiZWRyaW4iLCAiYXVkIjogImRyd3AiLCAiaWF0IjogIjE0MDY4MTQyMDQiLCAiZXhwIjogIjE0MDY4MTQ1MDQiLCAiZGV2aWQiOiAidGVzdERldmljZSIsICJzY29wZSI6ICIvc3RvcmVUb2tlbiJ9.YRutuJpAugVxmsNW1Equmh4aj_h6GjE7LdSo9CgBst4NbTU7WtKy4nX0JYw0i5sdK9rWy4HzaDQvG8RoWiT3yg
        responses: 
              201: 
                 description: The response of the API is an object that contains the following fields.
                 body:  
                  application/json: 
                    example: | 
                      {
                      "access_token": "b6afc7894e30fa3d58b319c4aca4f58dd3173bbf",
                      "token_type": "Bearer",
                      "expires_in": 10000,
                      "number_of_retries": 10
                      "secret_key": "mo_Kab-u6mMtBYmgQjnh8w",
                      "initialization_vector": "inxc42CYDS6OckBfHNxzxQ"
                      }
              400:
                  description: Note, Pattern will be same however error codes may differ depending on the error. 
                  body:
                    application/json:
                      example: |
                        {
                          "error":"invalid_request",
                          "error_description":"refreshToken must not be empty"
                        }